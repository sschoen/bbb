- name: Add bridge configuration
  blockinfile:
    path: /etc/network/interfaces
    block: |
      auto virbr0
      iface virbr0 inet static
         address {{ guest_network | ipaddr('next_usable') }}
         netmask {{ guest_network | ipaddr('netmask') }}
         bridge_ports none
         bridge_stp off
         bridge_fd 0
         pre-up brctl addbr virbr0
  notify: Restart networking

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Provide ufw turnserver config
  copy:
    src: ufw-turnserver
    dest: /etc/ufw/applications.d/turnserver

- name: Reject forwarding in ufw by default
  lineinfile:
    path: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: DEFAULT_FORWARD_POLICY="REJECT"
  notify: Restart ufw

- name: Allow all traffic initiated from BBBs
  ufw:
    from_ip: "{{ guest_network }}"
    rule: allow
    route: yes
  notify: Restart ufw

- name: Allow services
  ufw:
    name: "{{ item }}"
    rule: allow
    route: yes
  loop:
    - OpenSSH
    - WWW Full
    - turnserver
  notify: Restart ufw

- name: Allow ports
  ufw:
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    rule: allow
    route: yes
  loop:
    - { port: '16384:32768', proto: udp }
    - { port: 4949, proto: tcp }
    - { port: 6556, proto: tcp }
  notify: Restart ufw

- name: Forbid private networks
  ufw:
    to_ip: "{{ item }}"
    rule: reject
    route: yes
  loop:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
    - 100.64.0.0/10
    - 169.254.0.0/16
  notify: Restart ufw

- name: Encrease fs.inotify.max_user_instances
  sysctl:
    name: fs.inotify.max_user_instances
    value: '512'
    sysctl_set: yes
    state: present
    reload: yes

# directories
- name: Make sure config dir exists
  file:
    path: /etc/systemd/nspawn
    state: directory

- name: Make sure machine config dir exists
  file:
    path: /var/lib/machines/config/
    state: directory


- meta: flush_handlers
